1.查看设备结点的命令   ls /dev

2.exexl实际上是程序直接跳转，不会再返回

3.link函数创建硬链接inode号是一样的 类似于windows中的创建快捷方式 

4.symlink函数创建软连接
硬链接(hard link)：
　　A是B的硬链接（A和B都是文件名），则A的目录项中的inode节点号
与B的目录项中的inode节点号相同，即一个inode节点对应两个不同的文件名两个文件名指向同一个文件，
A和B对文件系统来说是完全平等的。如果删除了其中一个，对另外一个没有影响。每增加一个文件名，
inode节点上的链接数增加一，每删除一个对应的文件名，inode节点上的链接数减一，直到为0，inode节
点和对应的数据块被回收。注：文件和文件名是不同的东西，rm A删除的只是A这个文件名，而A对应的数
据块（文件）只有在inode节点链接数减少为0的时候才会被系统回收。

软链接(soft link)：
　　A是B的软链接（A和B都是文件名），A的目录项中的inode节点号与B的目录项中的inode节点号不相同，
A和B指向的是两个不同的inode，继而指向两块不同的数据块。但是A的数据块中存放的只是B的路径名（可
以根据这个找到B的目录项）。A和B之间是“主从”关系，如果B被删除了，A仍然存在（因为两个是不同的文
件），但指向的是一个无效的链接。

5.unlin函数删除链接
当 unlink 指向的是软链接，则会删除软链接，不会删除目标文件。相当于删除的是复制的那一份。
当 unlink 指向的是硬链接，如果不是最后一个链接，则只是删除文件节点，如果是最后一个链接，则就相当于删除了文件。

6.remove函数
另外还有一个 remove 函数，可以直接用来删除 path。
如果 path 是目录则 remove 调用 rmdir。
如果 path 是文件则 remove 调用 unlink。

7.alarm相当于一个定时闹钟，
signal(SIGALRM,	handler);   //需要定时做的事情
alarm(5);                   //开启闹钟定时
